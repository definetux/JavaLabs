package com.testcode;

/**
 * Created by mgoncharuk on 27.12.14.
 */
public class NewClass {; // Оператор ; пропускается т.к. ничего не делает
    public static void main(String[] args){
        double $ = 0XF_EP4F; // Такое объявление доступно начиная с jdk 7 - $ = 4064.0
        long year = 2011; // Просто объявление переменной
        short[][] s = {{1,2,3}, {0,0,0},}; // Создание двумерного массива, запятая игнорируется,
                                          // т.к. после нее ничего не стоит
        int Геннаdiy = (int)41; // Переменный можно объявлять символами юникода, кроме предопределенных
        ;Byte[] Byte[] = {{0}}; // ; пропускает, т.к. перед нимм ничего нет. Имя переменной может повторять имя типа,
                                // в данном случае создается матрица из одной строки с одним элементом 0,
                                // кол-во элементов строки пока неизвестно
        System.out.println(Byte); // неявно вызывается метод toString() у матрицы Byte[][]
        System.out.println(Byte.class); // Вывод имени класса типа Byte (рефлексия)
        System.out.println(Byte.length); // Вывод длинны первой строки матрицы Byte
        System.out.println(new Byte("8")); // Переопределенный конструктор класс Byte приводит строку к числу
//        System.out.println(new Main().$_$()[2]); // Ошибка: класса Main не существует, программа не скомпилируется
//                                                 // Если бы класс существовал, то вывелся бы 0, так как метод возвращает
                                                 // массив из 7 элементов, заполненный нулями
    }

    ;short $_$()[] {{{ // Оператор ; игнорируется, short[] $_$() эквивалентен short $_$()[],
                       // имя метода может состоять из символов юникода, кроме заранее определенных
                       // вложенные блоки создают область видимости
        return new short[007]; // Создается пустой массив из 7 элементов заполненный нулями
    }}};
}
